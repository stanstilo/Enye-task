[{"C:\\Users\\STANLEY\\Desktop\\Enye-task-frontend\\src\\index.js":"1","C:\\Users\\STANLEY\\Desktop\\Enye-task-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\STANLEY\\Desktop\\Enye-task-frontend\\src\\App.js":"3","C:\\Users\\STANLEY\\Desktop\\Enye-task-frontend\\src\\component\\UserProfile.js":"4","C:\\Users\\STANLEY\\Desktop\\Enye-task-frontend\\src\\component\\Pagination.js":"5"},{"size":314,"mtime":1611121662865,"results":"6","hashOfConfig":"7"},{"size":375,"mtime":1611121662869,"results":"8","hashOfConfig":"7"},{"size":204,"mtime":1611121662854,"results":"9","hashOfConfig":"7"},{"size":6580,"mtime":1611183436195,"results":"10","hashOfConfig":"7"},{"size":811,"mtime":1611121662858,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"fhkck1",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\STANLEY\\Desktop\\Enye-task-frontend\\src\\index.js",[],["24","25"],"C:\\Users\\STANLEY\\Desktop\\Enye-task-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\STANLEY\\Desktop\\Enye-task-frontend\\src\\App.js",[],"C:\\Users\\STANLEY\\Desktop\\Enye-task-frontend\\src\\component\\UserProfile.js",["26"],"import React, { useState, useEffect } from \"react\";\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n// import {FontAwesome} from 'react-icons/fa';\r\nimport {FaSpinner} from 'react-icons/fa';\r\nimport \"./UserProfile.css\";\r\n\r\n\r\nconst UserProfile = () => {\r\n\r\n  const [data, setData] = useState({\r\n    loading: false,\r\n    error: null,\r\n    result: [],\r\n  });\r\n\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [selectValue, setSelectValue] = useState(\"all\");\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [userPerPage, setUserPerPage] = useState(20);\r\n \r\n  const indexOfLastUser = page * userPerPage\r\n  const indexOfFirstUser = indexOfLastUser + userPerPage\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setUserPerPage(event.target.value, 20)\r\n    setPage(0);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    const handleLoadData = async () => {\r\n      setData({\r\n        ...data,\r\n        error: null,\r\n        result: [],\r\n        loading: true,\r\n      });\r\n      setFilteredData([]);\r\n\r\n      try {\r\n        const request = await fetch(\r\n          \"https://api.enye.tech/v1/challenge/records\"\r\n        );\r\n        const response = await request.json();\r\n        setData({\r\n          ...data,\r\n          loading: false,\r\n          result: response.records.profiles,\r\n          error: null,\r\n        });\r\n        setFilteredData(response.records.profiles);\r\n      } catch (error) {\r\n        setData({\r\n          ...data,\r\n          loading: false,\r\n          result: [],\r\n          error: error.message,\r\n        });\r\n        setFilteredData([]);\r\n      }\r\n    };\r\n    handleLoadData();\r\n  }, []);\r\n\r\n  const handleSearchValue = (e) => {\r\n    setSearchValue(e.target.value);\r\n    let inputValue = e.target.value;\r\n    let filteredInput =\r\n      inputValue.length > 0 &&\r\n      data.result.filter(\r\n        (item) =>\r\n          item.FirstName.toLowerCase().includes(inputValue.toLowerCase()) ||\r\n          item.LastName.toLowerCase().includes(inputValue.toLowerCase())\r\n      );\r\n    if (inputValue === \"\") {\r\n      setFilteredData(data.result);\r\n    } else {\r\n      setFilteredData(filteredInput);\r\n    }\r\n  };\r\n\r\n  const handleSelectValue = (e) => {\r\n    setSelectValue(e.target.value);\r\n\r\n    let selectedValue = e.target.value;\r\n    let filteredInput =\r\n      selectedValue.length > 0 &&\r\n      data.result.filter(\r\n        (item) =>\r\n          item.Gender.toLowerCase() === selectedValue.toLowerCase() ||\r\n          item.PaymentMethod.toLowerCase() === selectedValue.toLowerCase()\r\n      );\r\n\r\n    if (e.target.value === \"all\") {\r\n      setFilteredData(data.result);\r\n    } else {\r\n      setFilteredData(filteredInput);\r\n    }\r\n  };\r\n\r\n  const handleFilterTitle = (title) => {\r\n    const filter = [];\r\n    data.result.forEach((item) => filter.push(item[title]));\r\n    return [...new Set([...filter])];\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <div className=\"user-profile-container\">\r\n    {data.loading && (\r\n        <div className='spinner-container'>\r\n          <FaSpinner className=\"spinner\"/>\r\n        </div>\r\n      )}\r\n      {data.error && (\r\n        <div>\r\n          <h3>Error : {data.error}</h3>\r\n        </div>\r\n      )}\r\n      {data.result && data.result.length > 0 && (\r\n\r\n        <>\r\n        <div className = \"search-filter-container\">\r\n        <div className = 'pt-5 input-search-container'>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"search\"\r\n            value={searchValue}\r\n            onChange={handleSearchValue}\r\n            className='search-input'\r\n          />\r\n          </div>\r\n        \r\n          <div className=\"pt-5 filter-row\">\r\n            Filter:{\" \"}\r\n            <select value={selectValue} onChange={handleSelectValue}>\r\n              <option value=\"all\">All</option>\r\n              <optgroup label=\"Gender\">\r\n                {handleFilterTitle(\"Gender\").map((item, index) => {\r\n                  return <option key={index} value={item}>{item}</option>;\r\n                })}\r\n              </optgroup>\r\n              <optgroup label=\"Payment Method\">\r\n                {handleFilterTitle(\"PaymentMethod\").map((item, index) => {\r\n                  return <option key={index} value={item}>{item}</option>;\r\n                })}\r\n              </optgroup>\r\n            </select>\r\n          </div>\r\n          </div>\r\n\r\n          {/* TABLE SECTION */}\r\n          <table className='table'>\r\n            <thead>\r\n              <tr>\r\n                <th>First Name</th>\r\n                <th>Last Name</th>\r\n                <th>Gender</th>\r\n                <th>Email</th>\r\n                <th>Phone Number</th>\r\n                <th>Payment Method</th>\r\n                <th>Credit Card Type</th>\r\n              </tr>\r\n            </thead>\r\n            \r\n            <tbody>\r\n              {filteredData.length > 0 &&\r\n                filteredData.slice(indexOfLastUser, indexOfFirstUser).map((record, index) => {\r\n                  const {\r\n                    FirstName,\r\n                    LastName,\r\n                    Gender,\r\n                    Email,\r\n                    PhoneNumber,\r\n                    PaymentMethod,\r\n                    CreditCardType,\r\n                  } = record;\r\n\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{FirstName}</td>\r\n                      <td>{LastName}</td>\r\n                      <td>{Gender}</td>\r\n                      <td>{Email}</td>\r\n                      <td>{PhoneNumber}</td>\r\n                      <td>{PaymentMethod}</td>\r\n                      <td>{CreditCardType}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </table>\r\n\r\n    <TablePagination\r\n      count={filteredData.length}\r\n      page={page}\r\n      onChangePage={handleChangePage}\r\n      rowsPerPage={userPerPage}\r\n      onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      backIconButtonProps={{\r\n        \"aria-label\": \"Previous Page\",\r\n        style: {color: page===0?\"#b5b8c4\":\"#7cb5ec\" },\r\n        autoid: \"pagination-button-next-collector\",\r\n      }}\r\n      nextIconButtonProps={{\r\n        \"aria-label\": \"Next Page\",\r\n        style: {color: page >= Math.ceil(filteredData.length /  userPerPage) - 1 ? \"#b5b8c4\" : \"#7cb5ec\"},\r\n        autoid: \"pagination-button-previous-collector\",\r\n      }}\r\n      rowsPerPageOptions={[20, 40,  60, 80, 100]}\r\n     />\r\n      </>\r\n      )}\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserProfile","C:\\Users\\STANLEY\\Desktop\\Enye-task-frontend\\src\\component\\Pagination.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":69,"column":6,"nodeType":"33","endLine":69,"endColumn":8,"suggestions":"34"},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'data' in the 'setData' call.","ArrayExpression",["37"],"no-global-assign","no-unsafe-negation",{"desc":"38","fix":"39"},"Update the dependencies array to be: [data]",{"range":"40","text":"41"},[1763,1765],"[data]"]